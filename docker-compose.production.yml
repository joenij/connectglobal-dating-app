# ConnectGlobal Production Stack for Hetzner Server
# Integrates with existing Nginx and SSL setup
version: '3.8'

services:
  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: connectglobal-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-connectglobal_prod}
      POSTGRES_USER: ${POSTGRES_USER:-connectglobal_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - /opt/jneconnect/data/postgres:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - /opt/jneconnect/backups/postgres:/backups
    restart: unless-stopped
    networks:
      - jneconnect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-connectglobal_user}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Redis Cache (Production)
  redis:
    image: redis:7-alpine
    container_name: connectglobal-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - /opt/jneconnect/data/redis:/data
      - /opt/jneconnect/backups/redis:/backups
    restart: unless-stopped
    networks:
      - jneconnect-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # ConnectGlobal API (Production)
  connectglobal-api:
    build:
      context: .
      dockerfile: backend/Dockerfile.production
    container_name: connectglobal-api-prod
    environment:
      # Application
      - NODE_ENV=production
      - PORT=8000
      - API_VERSION=v1
      - FRONTEND_URL=https://jneconnect.com
      
      # Database
      - DATABASE_URL=postgresql://${POSTGRES_USER:-connectglobal_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-connectglobal_prod}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - CORS_ORIGIN=https://jneconnect.com
      
      # Rate Limiting
      - RATE_LIMIT_MAX_REQUESTS=100
      - RATE_LIMIT_WINDOW_MS=900000
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      
      # Storage
      - STORAGE_TYPE=local
      - STORAGE_PATH=/app/uploads
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - /opt/jneconnect/uploads:/app/uploads
      - /opt/jneconnect/logs/app:/app/logs
      - /opt/jneconnect/backups/app:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - jneconnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Monitoring - Grafana (Production)
  grafana:
    image: grafana/grafana:latest
    container_name: connectglobal-grafana-prod
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SERVER_ROOT_URL=https://jneconnect.com/grafana/
      - GF_SECURITY_COOKIE_SECURE=true
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - /opt/jneconnect/data/grafana:/var/lib/grafana
      - /opt/jneconnect/config/grafana:/etc/grafana/provisioning:ro
    restart: unless-stopped
    networks:
      - jneconnect-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

networks:
  jneconnect-network:
    external: true
    name: jneconnect-network
# ConnectGlobal Self-Hosted Production Stack for Hetzner
# Complete setup with mail server, database, and application
version: '3.8'

services:
  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: connectglobal-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-connectglobal_prod}
      POSTGRES_USER: ${POSTGRES_USER:-connectglobal_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./backups/postgres:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-connectglobal_user}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Redis Cache (Production)
  redis:
    image: redis:7-alpine
    container_name: connectglobal-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_prod_data:/data
      - ./backups/redis:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Self-Hosted Mail Server (Production)
  mailserver:
    image: mailserver/docker-mailserver:latest
    container_name: connectglobal-mailserver-prod
    hostname: ${MAIL_HOSTNAME:-mail.yourdomain.com}
    ports:
      - "25:25"    # SMTP
      - "587:587"  # SMTP Submission
      - "993:993"  # IMAPS
    volumes:
      - mailserver_data:/var/mail
      - mailserver_state:/var/mail-state
      - mailserver_logs:/var/log/mail
      - mailserver_config:/tmp/docker-mailserver
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./backups/mail:/backups
    environment:
      # Basic Configuration
      - HOSTNAME=${MAIL_HOSTNAME:-mail.yourdomain.com}
      - DOMAINNAME=${DOMAIN_NAME:-yourdomain.com}
      
      # SSL Configuration
      - SSL_TYPE=letsencrypt
      - SSL_CERT_PATH=/etc/letsencrypt/live/${MAIL_HOSTNAME:-mail.yourdomain.com}/fullchain.pem
      - SSL_KEY_PATH=/etc/letsencrypt/live/${MAIL_HOSTNAME:-mail.yourdomain.com}/privkey.pem
      
      # Security Features
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ENABLE_AMAVIS=1
      
      # Authentication
      - PERMIT_DOCKER=host
      - SMTP_ONLY=0
      - ENABLE_POP3=0
      
      # Logging
      - LOG_LEVEL=info
      - LOGROTATE_INTERVAL=daily
      
      # Performance
      - ONE_DIR=1
      - DMS_DEBUG=0
    restart: unless-stopped
    stop_grace_period: 1m
    healthcheck:
      test: "ss -lntp | grep -E ':25|:587|:993' || exit 1"
      timeout: 3s
      retries: 0
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # ConnectGlobal API (Production)
  connectglobal-api:
    build:
      context: .
      dockerfile: backend/Dockerfile.production
    container_name: connectglobal-api-prod
    environment:
      # Application
      - NODE_ENV=production
      - PORT=8000
      - API_VERSION=v1
      - FRONTEND_URL=${FRONTEND_URL:-https://yourdomain.com}
      
      # Database
      - DATABASE_URL=postgresql://${POSTGRES_USER:-connectglobal_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-connectglobal_prod}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Self-Hosted SMTP
      - SELF_HOSTED_SMTP=true
      - SMTP_HOST=${MAIL_HOSTNAME:-mail.yourdomain.com}
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_USER=noreply@${DOMAIN_NAME:-yourdomain.com}
      - SMTP_PASS=${SMTP_PASSWORD}
      - FROM_EMAIL=noreply@${DOMAIN_NAME:-yourdomain.com}
      
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - CORS_ORIGIN=${FRONTEND_URL:-https://yourdomain.com}
      
      # Rate Limiting
      - RATE_LIMIT_MAX_REQUESTS=100
      - RATE_LIMIT_WINDOW_MS=900000
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      
      # File Storage (local for now, can be changed to S3)
      - STORAGE_TYPE=local
      - STORAGE_PATH=/app/uploads
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - ./backups/app:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailserver:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: connectglobal-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/html:/var/www/html:ro
      - app_uploads:/var/www/uploads:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    depends_on:
      - connectglobal-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Monitoring - Grafana (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: connectglobal-grafana-prod
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Backup Service (Automated)
  backup:
    image: alpine:latest
    container_name: connectglobal-backup-prod
    volumes:
      - postgres_prod_data:/data/postgres:ro
      - redis_prod_data:/data/redis:ro
      - mailserver_data:/data/mail:ro
      - app_uploads:/data/uploads:ro
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-connectglobal_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-connectglobal_prod}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    command: |
      sh -c '
        apk add --no-cache postgresql-client redis dcron
        echo "0 2 * * * /backup.sh >> /var/log/backup.log 2>&1" | crontab -
        crond -f -d 0
      '
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  # Production Data Volumes
  postgres_prod_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/data/postgres
  
  redis_prod_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/data/redis
  
  mailserver_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/data/mail
  
  mailserver_state:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/state/mail
  
  mailserver_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/logs/mail
  
  mailserver_config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/config/mail
  
  app_uploads:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/uploads
  
  app_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/logs/app
  
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/data/grafana
  
  nginx_cache:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/cache/nginx
  
  nginx_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/connectglobal/logs/nginx

networks:
  default:
    name: connectglobal-prod-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16